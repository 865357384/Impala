# Q1 - Pricing Summary Report Query
# Modifications: Remove ORDER BY, added ROUND() calls
select
  l_returnflag,
  l_linestatus,
  round(sum(l_quantity), 1),
  round(sum(l_extendedprice), 1),
  round(sum(l_extendedprice * (1 - l_discount)), 1),
  round(sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)), 1),
  round(avg(l_quantity), 1),
  round(avg(l_extendedprice), 1),
  round(avg(l_discount), 1), count(1)
from
  tpch.lineitem
where
  l_shipdate<='1998-09-02'
group by
  l_returnflag,
  l_linestatus
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(l_quantity), SUM(l_extendedprice), SUM(l_extendedprice * 1.0 - l_discount), SUM(l_extendedprice * 1.0 - l_discount * 1.0 + l_tax), COUNT(l_quantity), COUNT(l_extendedprice), SUM(l_discount), COUNT(l_discount), COUNT(1)
  GROUP BY: l_returnflag, l_linestatus
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate <= '1998-09-02'
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(<slot 9>), SUM(<slot 10>), SUM(<slot 11>), SUM(<slot 12>), SUM(<slot 13>), SUM(<slot 14>), SUM(<slot 15>), SUM(<slot 16>), SUM(<slot 17>)
  GROUP BY: <slot 7>, <slot 8>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_quantity), SUM(l_extendedprice), SUM(l_extendedprice * 1.0 - l_discount), SUM(l_extendedprice * 1.0 - l_discount * 1.0 + l_tax), COUNT(l_quantity), COUNT(l_extendedprice), SUM(l_discount), COUNT(l_discount), COUNT(1)
  GROUP BY: l_returnflag, l_linestatus
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate <= '1998-09-02'
      TUPLE IDS: 0 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
====
# Q2 - Minimum Cost Supplier Query
insert overwrite table tpch.q2_minimum_cost_supplier_tmp1
select
  s.s_acctbal,
  s.s_name,
  n.n_name,
  p.p_partkey,
  ps.ps_supplycost,
  p.p_mfgr,
  s.s_address,
  s.s_phone,
  s.s_comment
from tpch.partsupp ps
  join tpch.part p
    on (p.p_partkey = ps.ps_partkey and p.p_size = 15 and p.p_type like '%BRASS')
  join tpch.supplier s
    on (s.s_suppkey = ps.ps_suppkey)
  join tpch.nation n
    on (s.s_nationkey = n.n_nationkey)
  join tpch.region r
    on (n.n_regionkey = r.r_regionkey and r.r_name = 'EUROPE')
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q2_minimum_cost_supplier_tmp1
    OVERWRITE=true
  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      n.n_regionkey = r.r_regionkey
    TUPLE IDS: 0 1 2 3 4 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          s.s_nationkey = n.n_nationkey
        TUPLE IDS: 0 1 2 3 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              ps.ps_suppkey = s.s_suppkey
            TUPLE IDS: 0 1 2 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  ps.ps_partkey = p.p_partkey
                TUPLE IDS: 0 1 
                  SCAN HDFS table=tpch.partsupp (0)
                    TUPLE IDS: 0 
                  SCAN HDFS table=tpch.part (1) compact
                    PREDICATES: p.p_size = 15, p.p_type LIKE '%BRASS'
                    TUPLE IDS: 1 
              SCAN HDFS table=tpch.supplier (3) compact
                TUPLE IDS: 2 
          SCAN HDFS table=tpch.nation (5) compact
            TUPLE IDS: 3 
      SCAN HDFS table=tpch.region (7) compact
        PREDICATES: r.r_name = 'EUROPE'
        TUPLE IDS: 4 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  RANDOM
  WRITE TO HDFS table=tpch.q2_minimum_cost_supplier_tmp1
    OVERWRITE=true
  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      n.n_regionkey = r.r_regionkey
    TUPLE IDS: 0 1 2 3 4 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          s.s_nationkey = n.n_nationkey
        TUPLE IDS: 0 1 2 3 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              ps.ps_suppkey = s.s_suppkey
            TUPLE IDS: 0 1 2 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  ps.ps_partkey = p.p_partkey
                TUPLE IDS: 0 1 
                  SCAN HDFS table=tpch.partsupp (0)
                    TUPLE IDS: 0 
                  EXCHANGE (9)
                    TUPLE IDS: 1 
              EXCHANGE (10)
                TUPLE IDS: 2 
          EXCHANGE (11)
            TUPLE IDS: 3 
      EXCHANGE (12)
        TUPLE IDS: 4 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 12
    UNPARTITIONED

  SCAN HDFS table=tpch.region (7) compact
    PREDICATES: r.r_name = 'EUROPE'
    TUPLE IDS: 4 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 11
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (5) compact
    TUPLE IDS: 3 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 10
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier (3) compact
    TUPLE IDS: 2 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 9
    UNPARTITIONED

  SCAN HDFS table=tpch.part (1) compact
    PREDICATES: p.p_size = 15, p.p_type LIKE '%BRASS'
    TUPLE IDS: 1 
====
insert overwrite table tpch.q2_minimum_cost_supplier_tmp2
select
  p_partkey,
  min(ps_supplycost)
from  tpch.q2_minimum_cost_supplier_tmp1
group by p_partkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q2_minimum_cost_supplier_tmp2
    OVERWRITE=true
  AGGREGATE
  OUTPUT: MIN(ps_supplycost)
  GROUP BY: p_partkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.q2_minimum_cost_supplier_tmp1 (0)
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q2_minimum_cost_supplier_tmp2
    OVERWRITE=true
  AGGREGATE
  OUTPUT: MIN(<slot 3>)
  GROUP BY: <slot 2>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: MIN(ps_supplycost)
  GROUP BY: p_partkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.q2_minimum_cost_supplier_tmp1 (0)
      TUPLE IDS: 0 
====
# Modifications: Fully qualified name of p_partkey column in the ORDER BY clause
select
  t1.s_acctbal,
  t1.s_name,
  t1.n_name,
  t1.p_partkey,
  t1.p_mfgr,
  t1.s_address,
  t1.s_phone,
  t1.s_comment
from tpch.q2_minimum_cost_supplier_tmp1 t1
join tpch.q2_minimum_cost_supplier_tmp2 t2
  on (t1.p_partkey = t2.p_partkey and t1.ps_supplycost = t2.ps_min_supplycost)
order by
  s_acctbal desc,
  n_name,
  s_name,
  t1.p_partkey
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: t1.s_acctbal DESC, t1.n_name ASC, t1.s_name ASC, t1.p_partkey ASC
  LIMIT: 100
  TUPLE IDS: 0 1 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        t1.p_partkey = t2.p_partkey
        t1.ps_supplycost = t2.ps_min_supplycost
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.q2_minimum_cost_supplier_tmp1 (0)
          TUPLE IDS: 0 
        SCAN HDFS table=tpch.q2_minimum_cost_supplier_tmp2 (1) compact
          TUPLE IDS: 1 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: t1.s_acctbal DESC, t1.n_name ASC, t1.s_name ASC, t1.p_partkey ASC
  LIMIT: 100
  TUPLE IDS: 0 1 
    EXCHANGE (5)
      TUPLE IDS: 0 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      t1.p_partkey = t2.p_partkey
      t1.ps_supplycost = t2.ps_min_supplycost
    TUPLE IDS: 0 1 
      SCAN HDFS table=tpch.q2_minimum_cost_supplier_tmp1 (0)
        TUPLE IDS: 0 
      EXCHANGE (4)
        TUPLE IDS: 1 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 4
    UNPARTITIONED

  SCAN HDFS table=tpch.q2_minimum_cost_supplier_tmp2 (1) compact
    TUPLE IDS: 1 
====
# Q3 - Shipping Priority Query
# Modifications: Added round() calls
select
  l_orderkey,
  round(sum(l_extendedprice * (1 - l_discount)), 5) as revenue,
  o_orderdate,
  o_shippriority
from tpch.lineitem l
  join tpch.orders o
    on (l.l_orderkey = o.o_orderkey)
  join tpch.customer c
    on (c.c_mktsegment = 'BUILDING' and c.c_custkey = o.o_custkey)
where
  o_orderdate < '1995-03-15' and
  l_shipdate > '1995-03-15'
group by
  l_orderkey,
  o_orderdate,
  o_shippriority
order by
  revenue desc,
  o_orderdate
limit 10
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: round(<slot 13>, 5) DESC, <slot 11> ASC
  LIMIT: 10
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
    GROUP BY: l_orderkey, o_orderdate, o_shippriority
    TUPLE IDS: 3 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          o.o_custkey = c.c_custkey
        TUPLE IDS: 0 1 2 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              l.l_orderkey = o.o_orderkey
            TUPLE IDS: 0 1 
              SCAN HDFS table=tpch.lineitem (0)
                PREDICATES: l_shipdate > '1995-03-15'
                TUPLE IDS: 0 
              SCAN HDFS table=tpch.orders (1) compact
                PREDICATES: o_orderdate < '1995-03-15'
                TUPLE IDS: 1 
          SCAN HDFS table=tpch.customer (3) compact
            PREDICATES: c.c_mktsegment = 'BUILDING'
            TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: round(<slot 13>, 5) DESC, <slot 11> ASC
  LIMIT: 10
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: SUM(<slot 13>)
    GROUP BY: <slot 10>, <slot 11>, <slot 12>
    TUPLE IDS: 3 
      EXCHANGE (9)
        TUPLE IDS: 3 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 9
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: l_orderkey, o_orderdate, o_shippriority
  TUPLE IDS: 3 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        o.o_custkey = c.c_custkey
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            l.l_orderkey = o.o_orderkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.lineitem (0)
              PREDICATES: l_shipdate > '1995-03-15'
              TUPLE IDS: 0 
            EXCHANGE (7)
              TUPLE IDS: 1 
        EXCHANGE (8)
          TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 8
    UNPARTITIONED

  SCAN HDFS table=tpch.customer (3) compact
    PREDICATES: c.c_mktsegment = 'BUILDING'
    TUPLE IDS: 2 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    PREDICATES: o_orderdate < '1995-03-15'
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
NODE 3:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.customer/customer.tbl 0:24196144
  LOCATIONS:
====
# Q4 - Order Priority Checking Query
# Modifications: Converted selects from multiple tables to joins,
# rewrote 'exists' as an inner join + count(distinct), added
# limit
select
  o_orderpriority,
  count(distinct l_orderkey) as order_count
from tpch.lineitem l
inner join tpch.orders o
  on (o.o_orderkey = l.l_orderkey and
      l.l_commitdate < l.l_receiptdate)
where
  o_orderdate >= '1993-07-01' and
  o_orderdate < '1993-10-01'
group by
  o_orderpriority
order by
  o_orderpriority
limit 10
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 8> ASC
  LIMIT: 10
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: COUNT(*)
    GROUP BY: <slot 6>
    TUPLE IDS: 3 
      AGGREGATE
      OUTPUT: 
      GROUP BY: o_orderpriority, l_orderkey
      TUPLE IDS: 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            l.l_orderkey = o.o_orderkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.lineitem (0)
              PREDICATES: l.l_commitdate < l.l_receiptdate
              TUPLE IDS: 0 
            SCAN HDFS table=tpch.orders (1) compact
              PREDICATES: o_orderdate >= '1993-07-01', o_orderdate < '1993-10-01'
              TUPLE IDS: 1 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 8> ASC
  LIMIT: 10
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: COUNT(*)
    GROUP BY: <slot 6>
    TUPLE IDS: 3 
      AGGREGATE
      OUTPUT: 
      GROUP BY: <slot 6>, <slot 7>
      TUPLE IDS: 2 
        EXCHANGE (7)
          TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  AGGREGATE
  OUTPUT: 
  GROUP BY: o_orderpriority, l_orderkey
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        l.l_orderkey = o.o_orderkey
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.lineitem (0)
          PREDICATES: l.l_commitdate < l.l_receiptdate
          TUPLE IDS: 0 
        EXCHANGE (6)
          TUPLE IDS: 1 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    PREDICATES: o_orderdate >= '1993-07-01', o_orderdate < '1993-10-01'
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
====
# Q5 - Local Supplier Volume Query
# Modifications: Added round() call, converted selects from multiple tables
# to joins, added limit
select
  n_name,
  round(sum(l_extendedprice * (1 - l_discount)), 5) as revenue
from tpch.lineitem l
join tpch.orders o
  on (l_orderkey = o_orderkey)
join tpch.supplier s
  on (l_suppkey = s_suppkey)
join tpch.customer
  on (c_nationkey = s_nationkey and c_custkey = o_custkey)
join tpch.nation
  on (s_nationkey = n_nationkey)
join tpch.region
  on (n_regionkey = r_regionkey)
where
  r_name = 'ASIA'
  and o_orderdate >= '1994-01-01'
  and o_orderdate < '1995-01-01'
group by
  n_name
order by
  revenue desc
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: round(<slot 17>, 5) DESC
  LIMIT: 100
  TUPLE IDS: 6 
    AGGREGATE
    OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
    GROUP BY: n_name
    TUPLE IDS: 6 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          n_regionkey = r_regionkey
        TUPLE IDS: 0 1 2 3 4 5 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              s_nationkey = n_nationkey
            TUPLE IDS: 0 1 2 3 4 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  s_nationkey = c_nationkey
                  o_custkey = c_custkey
                TUPLE IDS: 0 1 2 3 
                  HASH JOIN
                    JOIN OP: INNER JOIN
                    HASH PREDICATES:
                      l_suppkey = s_suppkey
                    TUPLE IDS: 0 1 2 
                      HASH JOIN
                        JOIN OP: INNER JOIN
                        HASH PREDICATES:
                          l_orderkey = o_orderkey
                        TUPLE IDS: 0 1 
                          SCAN HDFS table=tpch.lineitem (0)
                            TUPLE IDS: 0 
                          SCAN HDFS table=tpch.orders (1) compact
                            PREDICATES: o_orderdate >= '1994-01-01', o_orderdate < '1995-01-01'
                            TUPLE IDS: 1 
                      SCAN HDFS table=tpch.supplier (3) compact
                        TUPLE IDS: 2 
                  SCAN HDFS table=tpch.customer (5) compact
                    TUPLE IDS: 3 
              SCAN HDFS table=tpch.nation (7) compact
                TUPLE IDS: 4 
          SCAN HDFS table=tpch.region (9) compact
            PREDICATES: r_name = 'ASIA'
            TUPLE IDS: 5 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: round(<slot 17>, 5) DESC
  LIMIT: 100
  TUPLE IDS: 6 
    AGGREGATE
    OUTPUT: SUM(<slot 17>)
    GROUP BY: <slot 16>
    TUPLE IDS: 6 
      EXCHANGE (18)
        TUPLE IDS: 6 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 18
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: n_name
  TUPLE IDS: 6 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        n_regionkey = r_regionkey
      TUPLE IDS: 0 1 2 3 4 5 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            s_nationkey = n_nationkey
          TUPLE IDS: 0 1 2 3 4 
            HASH JOIN
              JOIN OP: INNER JOIN
              HASH PREDICATES:
                s_nationkey = c_nationkey
                o_custkey = c_custkey
              TUPLE IDS: 0 1 2 3 
                HASH JOIN
                  JOIN OP: INNER JOIN
                  HASH PREDICATES:
                    l_suppkey = s_suppkey
                  TUPLE IDS: 0 1 2 
                    HASH JOIN
                      JOIN OP: INNER JOIN
                      HASH PREDICATES:
                        l_orderkey = o_orderkey
                      TUPLE IDS: 0 1 
                        SCAN HDFS table=tpch.lineitem (0)
                          TUPLE IDS: 0 
                        EXCHANGE (13)
                          TUPLE IDS: 1 
                    EXCHANGE (14)
                      TUPLE IDS: 2 
                EXCHANGE (15)
                  TUPLE IDS: 3 
            EXCHANGE (16)
              TUPLE IDS: 4 
        EXCHANGE (17)
          TUPLE IDS: 5 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 17
    UNPARTITIONED

  SCAN HDFS table=tpch.region (9) compact
    PREDICATES: r_name = 'ASIA'
    TUPLE IDS: 5 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 16
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (7) compact
    TUPLE IDS: 4 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 15
    UNPARTITIONED

  SCAN HDFS table=tpch.customer (5) compact
    TUPLE IDS: 3 

Plan Fragment 5
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 14
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier (3) compact
    TUPLE IDS: 2 

Plan Fragment 6
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 13
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    PREDICATES: o_orderdate >= '1994-01-01', o_orderdate < '1995-01-01'
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
NODE 3:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.supplier/supplier.tbl 0:1399184
  LOCATIONS:
NODE 5:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.customer/customer.tbl 0:24196144
  LOCATIONS:
NODE 7:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.nation/nation.tbl 0:2199
  LOCATIONS:
NODE 9:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.region/region.tbl 0:384
  LOCATIONS:
====
# Q6 - Forecasting Revenue Change Query
# Modifications: Added round() call
select round(sum(l_extendedprice * l_discount), 5) as revenue
from tpch.lineitem
where l_shipdate >= '1994-01-01' and
      l_shipdate < '1995-01-01' and
      l_discount >= 0.05 and
      l_discount <= 0.07 and
      l_quantity < 24
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(l_extendedprice * l_discount)
  GROUP BY: 
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate >= '1994-01-01', l_shipdate < '1995-01-01', l_discount >= 0.05, l_discount <= 0.07, l_quantity < 24.0
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(<slot 4>)
  GROUP BY: 
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice * l_discount)
  GROUP BY: 
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate >= '1994-01-01', l_shipdate < '1995-01-01', l_discount >= 0.05, l_discount <= 0.07, l_quantity < 24.0
      TUPLE IDS: 0 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
====
# Q8 - National Market Share Query
# Modifications: Got rid of subquery, converted select from multiple tables to joins,
# added round() call
select
  year(o_orderdate) as o_year,
  round(sum(case when n2.n_name = 'BRAZIL' then l_extendedprice * (1 - l_discount)
                 else 0 end) / sum(l_extendedprice * (1 - l_discount)), 5) as mkt_share
from tpch.lineitem l
  join tpch.orders o
    on (l_orderkey = o_orderkey)
  join tpch.part p
    on (p_partkey = l_partkey)
  join tpch.supplier s
    on (s_suppkey = l_suppkey)
  join tpch.customer c
    on (o_custkey = c_custkey)
  join tpch.nation n1
    on (c_nationkey = n1.n_nationkey)
  join tpch.region r
    on (n1.n_regionkey = r_regionkey)
  join tpch.nation n2
    on (s_nationkey = n2.n_nationkey)
where
  r_name = 'AMERICA' and
  o_orderdate >= '1995-01-01' and
  o_orderdate < '1996-12-31' and
  p_type = 'ECONOMY ANODIZED STEEL'
group by
  o_year
order by
  o_year
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 20> ASC
  LIMIT: 100
  TUPLE IDS: 8 
    AGGREGATE
    OUTPUT: SUM(CASE WHEN n2.n_name = 'BRAZIL' THEN l_extendedprice * 1.0 - l_discount ELSE 0.0 END), SUM(l_extendedprice * 1.0 - l_discount)
    GROUP BY: year(o_orderdate)
    TUPLE IDS: 8 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          s_nationkey = n2.n_nationkey
        TUPLE IDS: 0 1 2 3 4 5 6 7 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              n1.n_regionkey = r_regionkey
            TUPLE IDS: 0 1 2 3 4 5 6 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  c_nationkey = n1.n_nationkey
                TUPLE IDS: 0 1 2 3 4 5 
                  HASH JOIN
                    JOIN OP: INNER JOIN
                    HASH PREDICATES:
                      o_custkey = c_custkey
                    TUPLE IDS: 0 1 2 3 4 
                      HASH JOIN
                        JOIN OP: INNER JOIN
                        HASH PREDICATES:
                          l_suppkey = s_suppkey
                        TUPLE IDS: 0 1 2 3 
                          HASH JOIN
                            JOIN OP: INNER JOIN
                            HASH PREDICATES:
                              l_partkey = p_partkey
                            TUPLE IDS: 0 1 2 
                              HASH JOIN
                                JOIN OP: INNER JOIN
                                HASH PREDICATES:
                                  l_orderkey = o_orderkey
                                TUPLE IDS: 0 1 
                                  SCAN HDFS table=tpch.lineitem (0)
                                    TUPLE IDS: 0 
                                  SCAN HDFS table=tpch.orders (1) compact
                                    PREDICATES: o_orderdate >= '1995-01-01', o_orderdate < '1996-12-31'
                                    TUPLE IDS: 1 
                              SCAN HDFS table=tpch.part (3) compact
                                PREDICATES: p_type = 'ECONOMY ANODIZED STEEL'
                                TUPLE IDS: 2 
                          SCAN HDFS table=tpch.supplier (5) compact
                            TUPLE IDS: 3 
                      SCAN HDFS table=tpch.customer (7) compact
                        TUPLE IDS: 4 
                  SCAN HDFS table=tpch.nation (9) compact
                    TUPLE IDS: 5 
              SCAN HDFS table=tpch.region (11) compact
                PREDICATES: r_name = 'AMERICA'
                TUPLE IDS: 6 
          SCAN HDFS table=tpch.nation (13) compact
            TUPLE IDS: 7 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 20> ASC
  LIMIT: 100
  TUPLE IDS: 8 
    AGGREGATE
    OUTPUT: SUM(<slot 21>), SUM(<slot 22>)
    GROUP BY: <slot 20>
    TUPLE IDS: 8 
      EXCHANGE (24)
        TUPLE IDS: 8 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 24
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(CASE WHEN n2.n_name = 'BRAZIL' THEN l_extendedprice * 1.0 - l_discount ELSE 0.0 END), SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: year(o_orderdate)
  TUPLE IDS: 8 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        s_nationkey = n2.n_nationkey
      TUPLE IDS: 0 1 2 3 4 5 6 7 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            n1.n_regionkey = r_regionkey
          TUPLE IDS: 0 1 2 3 4 5 6 
            HASH JOIN
              JOIN OP: INNER JOIN
              HASH PREDICATES:
                c_nationkey = n1.n_nationkey
              TUPLE IDS: 0 1 2 3 4 5 
                HASH JOIN
                  JOIN OP: INNER JOIN
                  HASH PREDICATES:
                    o_custkey = c_custkey
                  TUPLE IDS: 0 1 2 3 4 
                    HASH JOIN
                      JOIN OP: INNER JOIN
                      HASH PREDICATES:
                        l_suppkey = s_suppkey
                      TUPLE IDS: 0 1 2 3 
                        HASH JOIN
                          JOIN OP: INNER JOIN
                          HASH PREDICATES:
                            l_partkey = p_partkey
                          TUPLE IDS: 0 1 2 
                            HASH JOIN
                              JOIN OP: INNER JOIN
                              HASH PREDICATES:
                                l_orderkey = o_orderkey
                              TUPLE IDS: 0 1 
                                SCAN HDFS table=tpch.lineitem (0)
                                  TUPLE IDS: 0 
                                EXCHANGE (17)
                                  TUPLE IDS: 1 
                            EXCHANGE (18)
                              TUPLE IDS: 2 
                        EXCHANGE (19)
                          TUPLE IDS: 3 
                    EXCHANGE (20)
                      TUPLE IDS: 4 
                EXCHANGE (21)
                  TUPLE IDS: 5 
            EXCHANGE (22)
              TUPLE IDS: 6 
        EXCHANGE (23)
          TUPLE IDS: 7 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 23
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (13) compact
    TUPLE IDS: 7 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 22
    UNPARTITIONED

  SCAN HDFS table=tpch.region (11) compact
    PREDICATES: r_name = 'AMERICA'
    TUPLE IDS: 6 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 21
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (9) compact
    TUPLE IDS: 5 

Plan Fragment 5
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 20
    UNPARTITIONED

  SCAN HDFS table=tpch.customer (7) compact
    TUPLE IDS: 4 

Plan Fragment 6
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 19
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier (5) compact
    TUPLE IDS: 3 

Plan Fragment 7
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 18
    UNPARTITIONED

  SCAN HDFS table=tpch.part (3) compact
    PREDICATES: p_type = 'ECONOMY ANODIZED STEEL'
    TUPLE IDS: 2 

Plan Fragment 8
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 17
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    PREDICATES: o_orderdate >= '1995-01-01', o_orderdate < '1996-12-31'
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
NODE 3:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.part/part.tbl 0:23935125
  LOCATIONS:
NODE 5:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.supplier/supplier.tbl 0:1399184
  LOCATIONS:
NODE 7:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.customer/customer.tbl 0:24196144
  LOCATIONS:
NODE 9:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.nation/nation.tbl 0:2199
  LOCATIONS:
NODE 11:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.region/region.tbl 0:384
  LOCATIONS:
NODE 13:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.nation/nation.tbl 0:2199
  LOCATIONS:
====
# Q9 - Product Type Measure Query
# Modifications: Removed subquery, converted selects from multiple tables to joins,
# added limit, added round()
select
  n.n_name as nation,
  year(o.o_orderdate) as o_year,
  round(sum(l.l_extendedprice * (1 - l.l_discount) -
            ps.ps_supplycost * l.l_quantity), 2) as sum_profit
from tpch.lineitem l
  join tpch.part p
    on (p.p_partkey = l.l_partkey)
  join tpch.orders o
    on (o.o_orderkey = l.l_orderkey)
  join tpch.partsupp ps
    on (ps.ps_suppkey = l.l_suppkey and ps.ps_partkey = l.l_partkey)
  join tpch.supplier s
    on (s.s_suppkey = l.l_suppkey)
  join tpch.nation n
    on (s.s_nationkey = n.n_nationkey)
where
  p.p_name like '%green%'
group by
  n.n_name,
  year(o.o_orderdate)
order by
  nation,
  o_year desc
limit 200
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 17> ASC, <slot 18> DESC
  LIMIT: 200
  TUPLE IDS: 6 
    AGGREGATE
    OUTPUT: SUM(l.l_extendedprice * 1.0 - l.l_discount - ps.ps_supplycost * l.l_quantity)
    GROUP BY: n.n_name, year(o.o_orderdate)
    TUPLE IDS: 6 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          s.s_nationkey = n.n_nationkey
        TUPLE IDS: 0 1 2 3 4 5 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              l.l_suppkey = s.s_suppkey
            TUPLE IDS: 0 1 2 3 4 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  l.l_suppkey = ps.ps_suppkey
                  l.l_partkey = ps.ps_partkey
                TUPLE IDS: 0 1 2 3 
                  HASH JOIN
                    JOIN OP: INNER JOIN
                    HASH PREDICATES:
                      l.l_orderkey = o.o_orderkey
                    TUPLE IDS: 0 1 2 
                      HASH JOIN
                        JOIN OP: INNER JOIN
                        HASH PREDICATES:
                          l.l_partkey = p.p_partkey
                        TUPLE IDS: 0 1 
                          SCAN HDFS table=tpch.lineitem (0)
                            TUPLE IDS: 0 
                          SCAN HDFS table=tpch.part (1) compact
                            PREDICATES: p.p_name LIKE '%green%'
                            TUPLE IDS: 1 
                      SCAN HDFS table=tpch.orders (3) compact
                        TUPLE IDS: 2 
                  SCAN HDFS table=tpch.partsupp (5) compact
                    TUPLE IDS: 3 
              SCAN HDFS table=tpch.supplier (7) compact
                TUPLE IDS: 4 
          SCAN HDFS table=tpch.nation (9) compact
            TUPLE IDS: 5 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 17> ASC, <slot 18> DESC
  LIMIT: 200
  TUPLE IDS: 6 
    AGGREGATE
    OUTPUT: SUM(<slot 19>)
    GROUP BY: <slot 17>, <slot 18>
    TUPLE IDS: 6 
      EXCHANGE (18)
        TUPLE IDS: 6 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 18
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l.l_extendedprice * 1.0 - l.l_discount - ps.ps_supplycost * l.l_quantity)
  GROUP BY: n.n_name, year(o.o_orderdate)
  TUPLE IDS: 6 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        s.s_nationkey = n.n_nationkey
      TUPLE IDS: 0 1 2 3 4 5 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            l.l_suppkey = s.s_suppkey
          TUPLE IDS: 0 1 2 3 4 
            HASH JOIN
              JOIN OP: INNER JOIN
              HASH PREDICATES:
                l.l_suppkey = ps.ps_suppkey
                l.l_partkey = ps.ps_partkey
              TUPLE IDS: 0 1 2 3 
                HASH JOIN
                  JOIN OP: INNER JOIN
                  HASH PREDICATES:
                    l.l_orderkey = o.o_orderkey
                  TUPLE IDS: 0 1 2 
                    HASH JOIN
                      JOIN OP: INNER JOIN
                      HASH PREDICATES:
                        l.l_partkey = p.p_partkey
                      TUPLE IDS: 0 1 
                        SCAN HDFS table=tpch.lineitem (0)
                          TUPLE IDS: 0 
                        EXCHANGE (13)
                          TUPLE IDS: 1 
                    EXCHANGE (14)
                      TUPLE IDS: 2 
                EXCHANGE (15)
                  TUPLE IDS: 3 
            EXCHANGE (16)
              TUPLE IDS: 4 
        EXCHANGE (17)
          TUPLE IDS: 5 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 17
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (9) compact
    TUPLE IDS: 5 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 16
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier (7) compact
    TUPLE IDS: 4 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 15
    UNPARTITIONED

  SCAN HDFS table=tpch.partsupp (5) compact
    TUPLE IDS: 3 

Plan Fragment 5
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 14
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (3) compact
    TUPLE IDS: 2 

Plan Fragment 6
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 13
    UNPARTITIONED

  SCAN HDFS table=tpch.part (1) compact
    PREDICATES: p.p_name LIKE '%green%'
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.part/part.tbl 0:23935125
  LOCATIONS:
NODE 3:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
NODE 5:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.partsupp/partsupp.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.partsupp/partsupp.tbl 67108864:51075752
  LOCATIONS:
NODE 7:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.supplier/supplier.tbl 0:1399184
  LOCATIONS:
NODE 9:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.nation/nation.tbl 0:2199
  LOCATIONS:
====
# Q10 - Returned Item Reporting Query
# Modifications: Cast c_acctbal to bigint due to float/double values not allowed in
# GROUP BY clause, added round() calls, converted select from multiple tables to
# joins
select
  c_custkey,
  c_name,
  round(sum(l_extendedprice * (1 - l_discount)), 5) as revenue,
  cast(c_acctbal as bigint) cast_c_acctbal,
  n_name,
  c_address,
  c_phone,
  c_comment
from tpch.lineitem l
  join tpch.orders o
    on (l.l_orderkey = o.o_orderkey)
  join tpch.customer c
    on (c.c_custkey = o.o_custkey)
  join tpch.nation n
    on (c.c_nationkey = n.n_nationkey)
where
  o.o_orderdate >= '1993-10-01' and
  o.o_orderdate < '1994-01-01' and
  l.l_returnflag = 'R'
group by
  c_custkey,
  c_name,
  cast(c_acctbal as bigint),
  c_phone,
  n_name,
  c_address,
  c_comment
order by
  revenue desc
limit 20
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: round(<slot 23>, 5) DESC
  LIMIT: 20
  TUPLE IDS: 4 
    AGGREGATE
    OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
    GROUP BY: c_custkey, c_name, CAST(c_acctbal AS BIGINT), c_phone, n_name, c_address, c_comment
    TUPLE IDS: 4 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          c.c_nationkey = n.n_nationkey
        TUPLE IDS: 0 1 2 3 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              o.o_custkey = c.c_custkey
            TUPLE IDS: 0 1 2 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  l.l_orderkey = o.o_orderkey
                TUPLE IDS: 0 1 
                  SCAN HDFS table=tpch.lineitem (0)
                    PREDICATES: l.l_returnflag = 'R'
                    TUPLE IDS: 0 
                  SCAN HDFS table=tpch.orders (1) compact
                    PREDICATES: o.o_orderdate >= '1993-10-01', o.o_orderdate < '1994-01-01'
                    TUPLE IDS: 1 
              SCAN HDFS table=tpch.customer (3) compact
                TUPLE IDS: 2 
          SCAN HDFS table=tpch.nation (5) compact
            TUPLE IDS: 3 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: round(<slot 23>, 5) DESC
  LIMIT: 20
  TUPLE IDS: 4 
    AGGREGATE
    OUTPUT: SUM(<slot 23>)
    GROUP BY: <slot 16>, <slot 17>, <slot 18>, <slot 19>, <slot 20>, <slot 21>, <slot 22>
    TUPLE IDS: 4 
      EXCHANGE (12)
        TUPLE IDS: 4 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 12
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: c_custkey, c_name, CAST(c_acctbal AS BIGINT), c_phone, n_name, c_address, c_comment
  TUPLE IDS: 4 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        c.c_nationkey = n.n_nationkey
      TUPLE IDS: 0 1 2 3 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            o.o_custkey = c.c_custkey
          TUPLE IDS: 0 1 2 
            HASH JOIN
              JOIN OP: INNER JOIN
              HASH PREDICATES:
                l.l_orderkey = o.o_orderkey
              TUPLE IDS: 0 1 
                SCAN HDFS table=tpch.lineitem (0)
                  PREDICATES: l.l_returnflag = 'R'
                  TUPLE IDS: 0 
                EXCHANGE (9)
                  TUPLE IDS: 1 
            EXCHANGE (10)
              TUPLE IDS: 2 
        EXCHANGE (11)
          TUPLE IDS: 3 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 11
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (5) compact
    TUPLE IDS: 3 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 10
    UNPARTITIONED

  SCAN HDFS table=tpch.customer (3) compact
    TUPLE IDS: 2 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 9
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    PREDICATES: o.o_orderdate >= '1993-10-01', o.o_orderdate < '1994-01-01'
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
NODE 3:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.customer/customer.tbl 0:24196144
  LOCATIONS:
NODE 5:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.nation/nation.tbl 0:2199
  LOCATIONS:
====
# Q11 - Important Stock Identification
# TODO: Need to add part 2 of this query. It required some more advanced modifications.
insert overwrite table tpch.q11_part_tmp
select ps_partkey, sum(ps_supplycost * ps_availqty) as part_value
from tpch.nation n
join tpch.supplier s
  on s.s_nationkey = n.n_nationkey and n.n_name = 'GERMANY'
join tpch.partsupp ps
  on ps.ps_suppkey = s.s_suppkey
group by ps_partkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q11_part_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(ps_supplycost * ps_availqty)
  GROUP BY: ps_partkey
  TUPLE IDS: 3 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        s.s_suppkey = ps.ps_suppkey
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            n.n_nationkey = s.s_nationkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.nation (0)
              PREDICATES: n.n_name = 'GERMANY'
              TUPLE IDS: 0 
            SCAN HDFS table=tpch.supplier (1) compact
              TUPLE IDS: 1 
        SCAN HDFS table=tpch.partsupp (3) compact
          TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q11_part_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 9>)
  GROUP BY: <slot 8>
  TUPLE IDS: 3 
    EXCHANGE (8)
      TUPLE IDS: 3 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 8
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(ps_supplycost * ps_availqty)
  GROUP BY: ps_partkey
  TUPLE IDS: 3 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        s.s_suppkey = ps.ps_suppkey
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            n.n_nationkey = s.s_nationkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.nation (0)
              PREDICATES: n.n_name = 'GERMANY'
              TUPLE IDS: 0 
            EXCHANGE (6)
              TUPLE IDS: 1 
        EXCHANGE (7)
          TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  SCAN HDFS table=tpch.partsupp (3) compact
    TUPLE IDS: 2 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier (1) compact
    TUPLE IDS: 1 
====
insert overwrite table tpch.q11_sum_tmp
select sum(part_value) as total_value
from tpch.q11_part_tmp
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q11_sum_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(part_value)
  GROUP BY: 
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.q11_part_tmp (0)
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q11_sum_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 1>)
  GROUP BY: 
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(part_value)
  GROUP BY: 
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.q11_part_tmp (0)
      TUPLE IDS: 0 
====
# Q12 - Shipping Mode and Order Priority Query
# Modifications: Converted select from multiple tables to joins, added limit
select l_shipmode,
sum(case
      when o_orderpriority ='1-URGENT' or
           o_orderpriority ='2-HIGH'
      then 1
      else 0
    end
) as high_line_count,
sum(case
      when o_orderpriority <> '1-URGENT' and
           o_orderpriority <> '2-HIGH'
      then 1
      else 0
    end
) as low_line_count
from tpch.lineitem l
  join tpch.orders o
    on (o.o_orderkey = l.l_orderkey and
        l.l_commitdate < l.l_receiptdate and
        l.l_shipdate < l.l_commitdate)
where
  (l.l_shipmode = 'MAIL' or l.l_shipmode = 'SHIP') and
   l.l_receiptdate >= '1994-01-01' and
   l.l_receiptdate < '1995-01-01'
group by
  l_shipmode
order by
  l_shipmode
limit 10
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 7> ASC
  LIMIT: 10
  TUPLE IDS: 2 
    AGGREGATE
    OUTPUT: SUM(CASE WHEN o_orderpriority = '1-URGENT' OR o_orderpriority = '2-HIGH' THEN 1 ELSE 0 END), SUM(CASE WHEN o_orderpriority != '1-URGENT' AND o_orderpriority != '2-HIGH' THEN 1 ELSE 0 END)
    GROUP BY: l_shipmode
    TUPLE IDS: 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          l.l_orderkey = o.o_orderkey
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.lineitem (0)
            PREDICATES: l.l_commitdate < l.l_receiptdate, l.l_shipdate < l.l_commitdate, l.l_shipmode = 'MAIL' OR l.l_shipmode = 'SHIP', l.l_receiptdate >= '1994-01-01', l.l_receiptdate < '1995-01-01'
            TUPLE IDS: 0 
          SCAN HDFS table=tpch.orders (1) compact
            TUPLE IDS: 1 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 7> ASC
  LIMIT: 10
  TUPLE IDS: 2 
    AGGREGATE
    OUTPUT: SUM(<slot 8>), SUM(<slot 9>)
    GROUP BY: <slot 7>
    TUPLE IDS: 2 
      EXCHANGE (6)
        TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(CASE WHEN o_orderpriority = '1-URGENT' OR o_orderpriority = '2-HIGH' THEN 1 ELSE 0 END), SUM(CASE WHEN o_orderpriority != '1-URGENT' AND o_orderpriority != '2-HIGH' THEN 1 ELSE 0 END)
  GROUP BY: l_shipmode
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        l.l_orderkey = o.o_orderkey
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.lineitem (0)
          PREDICATES: l.l_commitdate < l.l_receiptdate, l.l_shipdate < l.l_commitdate, l.l_shipmode = 'MAIL' OR l.l_shipmode = 'SHIP', l.l_receiptdate >= '1994-01-01', l.l_receiptdate < '1995-01-01'
          TUPLE IDS: 0 
        EXCHANGE (5)
          TUPLE IDS: 1 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
====
# Q13 - Customer Distribution Query
select
  c_count,
  count(1) as custdist
from
  ( select
      c_custkey,
      count(o_orderkey) as c_count
    from tpch.orders o
    right outer join tpch.customer c
      on (c.c_custkey = o.o_custkey and o.o_comment not like '%special%requests%')
    group by
      c_custkey
  ) c_orders
group by
  c_count
order by
  custdist desc,
  c_count desc
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 9> DESC, <slot 8> DESC
  LIMIT: 100
  TUPLE IDS: 4 
    AGGREGATE
    OUTPUT: COUNT(1)
    GROUP BY: <slot 5>
    TUPLE IDS: 4 
      AGGREGATE
      OUTPUT: COUNT(o_orderkey)
      GROUP BY: c_custkey
      TUPLE IDS: 2 
        HASH JOIN
          JOIN OP: RIGHT OUTER JOIN
          HASH PREDICATES:
            o.o_custkey = c.c_custkey
          TUPLE IDS: 0N 1 
            SCAN HDFS table=tpch.orders (0)
              PREDICATES: NOT o.o_comment LIKE '%special%requests%'
              TUPLE IDS: 0 
            SCAN HDFS table=tpch.customer (1) compact
              TUPLE IDS: 1 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 9> DESC, <slot 8> DESC
  LIMIT: 100
  TUPLE IDS: 4 
    AGGREGATE
    OUTPUT: COUNT(1)
    GROUP BY: <slot 5>
    TUPLE IDS: 4 
      AGGREGATE
      OUTPUT: SUM(<slot 5>)
      GROUP BY: <slot 4>
      TUPLE IDS: 2 
        EXCHANGE (7)
          TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  AGGREGATE
  OUTPUT: COUNT(o_orderkey)
  GROUP BY: c_custkey
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: RIGHT OUTER JOIN
      HASH PREDICATES:
        o.o_custkey = c.c_custkey
      TUPLE IDS: 0N 1 
        SCAN HDFS table=tpch.orders (0)
          PREDICATES: NOT o.o_comment LIKE '%special%requests%'
          TUPLE IDS: 0 
        EXCHANGE (6)
          TUPLE IDS: 1 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.customer (1) compact
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.orders/orders.tbl 134217728:36234433
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.customer/customer.tbl 0:24196144
  LOCATIONS:
====
# Q14 - Promotion Effect
select
round(100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice*(1-l_discount)
             else 0.0
             end
             ) / sum(l_extendedprice * (1 - l_discount)), 5) as promo_revenue
from tpch.lineitem l
join tpch.part p
  on l.l_partkey = p.p_partkey and
     l.l_shipdate >= '1995-09-01' and
     l.l_shipdate < '1995-10-01'
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(CASE WHEN p_type LIKE 'PROMO%' THEN l_extendedprice * 1.0 - l_discount ELSE 0.0 END), SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: 
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        l.l_partkey = p.p_partkey
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.lineitem (0)
          PREDICATES: l.l_shipdate >= '1995-09-01', l.l_shipdate < '1995-10-01'
          TUPLE IDS: 0 
        SCAN HDFS table=tpch.part (1) compact
          TUPLE IDS: 1 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(<slot 6>), SUM(<slot 7>)
  GROUP BY: 
  TUPLE IDS: 2 
    EXCHANGE (5)
      TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(CASE WHEN p_type LIKE 'PROMO%' THEN l_extendedprice * 1.0 - l_discount ELSE 0.0 END), SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: 
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        l.l_partkey = p.p_partkey
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.lineitem (0)
          PREDICATES: l.l_shipdate >= '1995-09-01', l.l_shipdate < '1995-10-01'
          TUPLE IDS: 0 
        EXCHANGE (4)
          TUPLE IDS: 1 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 4
    UNPARTITIONED

  SCAN HDFS table=tpch.part (1) compact
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.part/part.tbl 0:23935125
  LOCATIONS:
====
# Q15 - Top Supplier Query
insert overwrite table tpch.revenue
select
  l_suppkey as supplier_no,
  sum(l_extendedprice * (1 - l_discount)) as total_revenue
from tpch.lineitem
where l_shipdate >= '1996-01-01' and l_shipdate < '1996-04-01'
group by l_suppkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.revenue
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: l_suppkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate >= '1996-01-01', l_shipdate < '1996-04-01'
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.revenue
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 5>)
  GROUP BY: <slot 4>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: l_suppkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate >= '1996-01-01', l_shipdate < '1996-04-01'
      TUPLE IDS: 0 
====
insert overwrite table tpch.max_revenue
select max(total_revenue)
from tpch.revenue
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.max_revenue
    OVERWRITE=true
  AGGREGATE
  OUTPUT: MAX(total_revenue)
  GROUP BY: 
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.revenue (0)
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.max_revenue
    OVERWRITE=true
  AGGREGATE
  OUTPUT: MAX(<slot 1>)
  GROUP BY: 
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: MAX(total_revenue)
  GROUP BY: 
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.revenue (0)
      TUPLE IDS: 0 
====
# Modifications - Added limit
select
  s_suppkey,
  s_name,
  s_address,
  s_phone,
  total_revenue
from tpch.supplier s
join tpch.revenue r
  on (s.s_suppkey = r.supplier_no)
join tpch.max_revenue m
  on (r.total_revenue = m.max_revenue)
order by s_suppkey
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: s_suppkey ASC
  LIMIT: 100
  TUPLE IDS: 0 1 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        r.total_revenue = m.max_revenue
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            s.s_suppkey = r.supplier_no
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.supplier (0)
              TUPLE IDS: 0 
            SCAN HDFS table=tpch.revenue (1) compact
              TUPLE IDS: 1 
        SCAN HDFS table=tpch.max_revenue (3) compact
          TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: s_suppkey ASC
  LIMIT: 100
  TUPLE IDS: 0 1 2 
    EXCHANGE (8)
      TUPLE IDS: 0 1 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 8
    UNPARTITIONED

  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      r.total_revenue = m.max_revenue
    TUPLE IDS: 0 1 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          s.s_suppkey = r.supplier_no
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.supplier (0)
            TUPLE IDS: 0 
          EXCHANGE (6)
            TUPLE IDS: 1 
      EXCHANGE (7)
        TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  SCAN HDFS table=tpch.max_revenue (3) compact
    TUPLE IDS: 2 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.revenue (1) compact
    TUPLE IDS: 1 
====
# Q16 - Parts/Supplier Relation Query
insert overwrite table tpch.supplier_tmp
select s_suppkey
from tpch.supplier
where not s_comment like '%Customer%Complaints%'
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.supplier_tmp
    OVERWRITE=true
  SCAN HDFS table=tpch.supplier (0)
    PREDICATES: NOT s_comment LIKE '%Customer%Complaints%'
    TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  RANDOM
  WRITE TO HDFS table=tpch.supplier_tmp
    OVERWRITE=true
  SCAN HDFS table=tpch.supplier (0)
    PREDICATES: NOT s_comment LIKE '%Customer%Complaints%'
    TUPLE IDS: 0 
====
insert overwrite table tpch.q16_tmp
select p_brand, p_type, p_size, ps_suppkey
from tpch.partsupp ps
join tpch.part p
  on p.p_partkey = ps.ps_partkey and
     p.p_brand <> 'Brand#45' and
     not p.p_type like 'MEDIUM POLISHED%'
join tpch.supplier_tmp s
  on ps.ps_suppkey = s.s_suppkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q16_tmp
    OVERWRITE=true
  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      ps.ps_suppkey = s.s_suppkey
    TUPLE IDS: 0 1 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          ps.ps_partkey = p.p_partkey
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.partsupp (0)
            TUPLE IDS: 0 
          SCAN HDFS table=tpch.part (1) compact
            PREDICATES: p.p_brand != 'Brand#45', NOT p.p_type LIKE 'MEDIUM POLISHED%'
            TUPLE IDS: 1 
      SCAN HDFS table=tpch.supplier_tmp (3) compact
        TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  RANDOM
  WRITE TO HDFS table=tpch.q16_tmp
    OVERWRITE=true
  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      ps.ps_suppkey = s.s_suppkey
    TUPLE IDS: 0 1 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          ps.ps_partkey = p.p_partkey
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.partsupp (0)
            TUPLE IDS: 0 
          EXCHANGE (5)
            TUPLE IDS: 1 
      EXCHANGE (6)
        TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier_tmp (3) compact
    TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  SCAN HDFS table=tpch.part (1) compact
    PREDICATES: p.p_brand != 'Brand#45', NOT p.p_type LIKE 'MEDIUM POLISHED%'
    TUPLE IDS: 1 
====
# Modifications: Added limit
select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt
from
( select * from tpch.q16_tmp
  where p_size = 49 or p_size = 14 or
        p_size = 23 or p_size = 45 or
        p_size = 19 or p_size = 3 or
        p_size = 36 or p_size = 9
) q16_all
group by p_brand, p_type, p_size
order by supplier_cnt desc, p_brand, p_type, p_size
limit 1000
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 15> DESC, <slot 12> ASC, <slot 13> ASC, <slot 14> ASC
  LIMIT: 1000
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: COUNT(*)
    GROUP BY: <slot 8>, <slot 9>, <slot 10>
    TUPLE IDS: 3 
      AGGREGATE
      OUTPUT: 
      GROUP BY: tpch.q16_tmp.p_brand, tpch.q16_tmp.p_type, tpch.q16_tmp.p_size, tpch.q16_tmp.ps_suppkey
      TUPLE IDS: 2 
        SCAN HDFS table=tpch.q16_tmp (0)
          PREDICATES: p_size = 49 OR p_size = 14 OR p_size = 23 OR p_size = 45 OR p_size = 19 OR p_size = 3 OR p_size = 36 OR p_size = 9
          TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 15> DESC, <slot 12> ASC, <slot 13> ASC, <slot 14> ASC
  LIMIT: 1000
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: COUNT(*)
    GROUP BY: <slot 8>, <slot 9>, <slot 10>
    TUPLE IDS: 3 
      AGGREGATE
      OUTPUT: 
      GROUP BY: <slot 8>, <slot 9>, <slot 10>, <slot 11>
      TUPLE IDS: 2 
        EXCHANGE (4)
          TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 4
    UNPARTITIONED

  AGGREGATE
  OUTPUT: 
  GROUP BY: tpch.q16_tmp.p_brand, tpch.q16_tmp.p_type, tpch.q16_tmp.p_size, tpch.q16_tmp.ps_suppkey
  TUPLE IDS: 2 
    SCAN HDFS table=tpch.q16_tmp (0)
      PREDICATES: p_size = 49 OR p_size = 14 OR p_size = 23 OR p_size = 45 OR p_size = 19 OR p_size = 3 OR p_size = 36 OR p_size = 9
      TUPLE IDS: 0 
====
# Q17 - Small-Quantity-Order Revenue Query
insert overwrite table tpch.lineitem_tmp
select l_partkey as t_partkey, 0.2 * avg(l_quantity) as t_avg_quantity
from tpch.lineitem
group by l_partkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.lineitem_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(l_quantity), COUNT(l_quantity)
  GROUP BY: l_partkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.lineitem_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 3>), SUM(<slot 4>)
  GROUP BY: <slot 2>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_quantity), COUNT(l_quantity)
  GROUP BY: l_partkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      TUPLE IDS: 0 
====
# Modifications: Converted selects from multiple tables to joins,
# added round() call, removed subquery
select round(sum(l_extendedprice) / 7.0, 5) as avg_yearly
from tpch.lineitem l
  join tpch.part p
    on (p.p_partkey = l.l_partkey)
  join tpch.lineitem_tmp lt
    on (lt.t_partkey = p.p_partkey)
where
  p.p_brand = 'Brand#23' and
  p.p_container = 'MED BOX' and
  l.l_quantity < lt.t_avg_quantity
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(l_extendedprice)
  GROUP BY: 
  TUPLE IDS: 3 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        p.p_partkey = lt.t_partkey
      OTHER PREDICATES: l.l_quantity < lt.t_avg_quantity
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            l.l_partkey = p.p_partkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.lineitem (0)
              TUPLE IDS: 0 
            SCAN HDFS table=tpch.part (1) compact
              PREDICATES: p.p_brand = 'Brand#23', p.p_container = 'MED BOX'
              TUPLE IDS: 1 
        SCAN HDFS table=tpch.lineitem_tmp (3) compact
          TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(<slot 8>)
  GROUP BY: 
  TUPLE IDS: 3 
    EXCHANGE (8)
      TUPLE IDS: 3 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 8
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice)
  GROUP BY: 
  TUPLE IDS: 3 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        p.p_partkey = lt.t_partkey
      OTHER PREDICATES: l.l_quantity < lt.t_avg_quantity
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            l.l_partkey = p.p_partkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.lineitem (0)
              TUPLE IDS: 0 
            EXCHANGE (6)
              TUPLE IDS: 1 
        EXCHANGE (7)
          TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  SCAN HDFS table=tpch.lineitem_tmp (3) compact
    TUPLE IDS: 2 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.part (1) compact
    PREDICATES: p.p_brand = 'Brand#23', p.p_container = 'MED BOX'
    TUPLE IDS: 1 
====
# Q18 - Large Value Customer Query
insert overwrite table tpch.q18_tmp
select l_orderkey, sum(l_quantity) as t_sum_quantity
from tpch.lineitem
group by l_orderkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q18_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(l_quantity)
  GROUP BY: l_orderkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q18_tmp
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 3>)
  GROUP BY: <slot 2>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_quantity)
  GROUP BY: l_orderkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      TUPLE IDS: 0 
====
# Modifications: Cast o_totalprice column due to float/double values not
# allowed in GROUP BY.
select
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  cast(o_totalprice as bigint) as total_price_bigint,
  round(sum(l_quantity), 5)
from tpch.lineitem l
  join tpch.orders o
    on (o.o_orderkey = l.l_orderkey)
  join tpch.customer c
    on (c.c_custkey = o.o_custkey)
  join tpch.q18_tmp t
    on (o.o_orderkey = t.l_orderkey and t.t_sum_quantity > 300)
group by
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  cast(o_totalprice as bigint)
order by
  total_price_bigint,
  o_orderdate
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 14> ASC, <slot 13> ASC
  LIMIT: 100
  TUPLE IDS: 4 
    AGGREGATE
    OUTPUT: SUM(l_quantity)
    GROUP BY: c_name, c_custkey, o_orderkey, o_orderdate, CAST(o_totalprice AS BIGINT)
    TUPLE IDS: 4 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          o.o_orderkey = t.l_orderkey
        TUPLE IDS: 0 1 2 3 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              o.o_custkey = c.c_custkey
            TUPLE IDS: 0 1 2 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  l.l_orderkey = o.o_orderkey
                TUPLE IDS: 0 1 
                  SCAN HDFS table=tpch.lineitem (0)
                    TUPLE IDS: 0 
                  SCAN HDFS table=tpch.orders (1) compact
                    TUPLE IDS: 1 
              SCAN HDFS table=tpch.customer (3) compact
                TUPLE IDS: 2 
          SCAN HDFS table=tpch.q18_tmp (5) compact
            PREDICATES: t.t_sum_quantity > 300.0
            TUPLE IDS: 3 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 14> ASC, <slot 13> ASC
  LIMIT: 100
  TUPLE IDS: 4 
    AGGREGATE
    OUTPUT: SUM(<slot 15>)
    GROUP BY: <slot 10>, <slot 11>, <slot 12>, <slot 13>, <slot 14>
    TUPLE IDS: 4 
      EXCHANGE (12)
        TUPLE IDS: 4 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 12
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_quantity)
  GROUP BY: c_name, c_custkey, o_orderkey, o_orderdate, CAST(o_totalprice AS BIGINT)
  TUPLE IDS: 4 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        o.o_orderkey = t.l_orderkey
      TUPLE IDS: 0 1 2 3 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            o.o_custkey = c.c_custkey
          TUPLE IDS: 0 1 2 
            HASH JOIN
              JOIN OP: INNER JOIN
              HASH PREDICATES:
                l.l_orderkey = o.o_orderkey
              TUPLE IDS: 0 1 
                SCAN HDFS table=tpch.lineitem (0)
                  TUPLE IDS: 0 
                EXCHANGE (9)
                  TUPLE IDS: 1 
            EXCHANGE (10)
              TUPLE IDS: 2 
        EXCHANGE (11)
          TUPLE IDS: 3 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 11
    UNPARTITIONED

  SCAN HDFS table=tpch.q18_tmp (5) compact
    PREDICATES: t.t_sum_quantity > 300.0
    TUPLE IDS: 3 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 10
    UNPARTITIONED

  SCAN HDFS table=tpch.customer (3) compact
    TUPLE IDS: 2 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 9
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (1) compact
    TUPLE IDS: 1 
====
# Q19 - Discounted Revenue Query
# Modifications: Added round() calls
select round(sum(l_extendedprice * (1 - l_discount) ), 5) as revenue
from tpch.lineitem l
join tpch.part p
  on p.p_partkey = l.l_partkey
where
(
  p_brand = 'Brand#12'
  and p_container REGEXP 'SM CASE||SM BOX||SM PACK||SM PKG'
  and l_quantity >= 1 and l_quantity <= 11
  and p_size >= 1 and p_size <= 5
  and l_shipmode REGEXP 'AIR||AIR REG'
  and l_shipinstruct = 'DELIVER IN PERSON'
)
or
(
  p_brand = 'Brand#23'
  and p_container REGEXP 'MED BAG||MED BOX||MED PKG||MED PACK'
  and l_quantity >= 10 and l_quantity <= 20
  and p_size >= 1 and p_size <= 10
  and l_shipmode REGEXP 'AIR||AIR REG'
  and l_shipinstruct = 'DELIVER IN PERSON'
)
or
(
  p_brand = 'Brand#34'
  and p_container REGEXP 'LG CASE||LG BOX||LG PACK||LG PKG'
  and l_quantity >= 20 and l_quantity <= 30
  and p_size >= 1 and p_size <= 15
  and l_shipmode REGEXP 'AIR||AIR REG'
  and l_shipinstruct = 'DELIVER IN PERSON'
)
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: 
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        l.l_partkey = p.p_partkey
      OTHER PREDICATES: p_brand = 'Brand#12' AND p_container REGEXP 'SM CASE||SM BOX||SM PACK||SM PKG' AND l_quantity >= 1.0 AND l_quantity <= 11.0 AND p_size >= 1 AND p_size <= 5 AND l_shipmode REGEXP 'AIR||AIR REG' AND l_shipinstruct = 'DELIVER IN PERSON' OR p_brand = 'Brand#23' AND p_container REGEXP 'MED BAG||MED BOX||MED PKG||MED PACK' AND l_quantity >= 10.0 AND l_quantity <= 20.0 AND p_size >= 1 AND p_size <= 10 AND l_shipmode REGEXP 'AIR||AIR REG' AND l_shipinstruct = 'DELIVER IN PERSON' OR p_brand = 'Brand#34' AND p_container REGEXP 'LG CASE||LG BOX||LG PACK||LG PKG' AND l_quantity >= 20.0 AND l_quantity <= 30.0 AND p_size >= 1 AND p_size <= 15 AND l_shipmode REGEXP 'AIR||AIR REG' AND l_shipinstruct = 'DELIVER IN PERSON'
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.lineitem (0)
          TUPLE IDS: 0 
        SCAN HDFS table=tpch.part (1) compact
          TUPLE IDS: 1 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  AGGREGATE
  OUTPUT: SUM(<slot 10>)
  GROUP BY: 
  TUPLE IDS: 2 
    EXCHANGE (5)
      TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_extendedprice * 1.0 - l_discount)
  GROUP BY: 
  TUPLE IDS: 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        l.l_partkey = p.p_partkey
      OTHER PREDICATES: p_brand = 'Brand#12' AND p_container REGEXP 'SM CASE||SM BOX||SM PACK||SM PKG' AND l_quantity >= 1.0 AND l_quantity <= 11.0 AND p_size >= 1 AND p_size <= 5 AND l_shipmode REGEXP 'AIR||AIR REG' AND l_shipinstruct = 'DELIVER IN PERSON' OR p_brand = 'Brand#23' AND p_container REGEXP 'MED BAG||MED BOX||MED PKG||MED PACK' AND l_quantity >= 10.0 AND l_quantity <= 20.0 AND p_size >= 1 AND p_size <= 10 AND l_shipmode REGEXP 'AIR||AIR REG' AND l_shipinstruct = 'DELIVER IN PERSON' OR p_brand = 'Brand#34' AND p_container REGEXP 'LG CASE||LG BOX||LG PACK||LG PKG' AND l_quantity >= 20.0 AND l_quantity <= 30.0 AND p_size >= 1 AND p_size <= 15 AND l_shipmode REGEXP 'AIR||AIR REG' AND l_shipinstruct = 'DELIVER IN PERSON'
      TUPLE IDS: 0 1 
        SCAN HDFS table=tpch.lineitem (0)
          TUPLE IDS: 0 
        EXCHANGE (4)
          TUPLE IDS: 1 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 4
    UNPARTITIONED

  SCAN HDFS table=tpch.part (1) compact
    TUPLE IDS: 1 
---- SCANRANGELOCATIONS
NODE 0:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 0:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 67108864:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 134217728:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 201326592:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 268435456:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 335544320:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 402653184:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 469762048:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 536870912:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 603979776:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 671088640:67108864
  LOCATIONS:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.lineitem/lineitem.tbl 738197504:15664568
  LOCATIONS:
NODE 1:
  HDFS SPLIT hdfs://localhost:20500/test-warehouse/tpch.part/part.tbl 0:23935125
  LOCATIONS:
====
# QUERY_NAME : TPCH-Q20_QUERY_1
# Q20 - Potential Part Promotion Query
insert overwrite table tpch.q20_tmp1
select distinct p_partkey
from tpch.part
where p_name like 'forest%'
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp1
    OVERWRITE=true
  AGGREGATE
  OUTPUT: 
  GROUP BY: p_partkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.part (0)
      PREDICATES: p_name LIKE 'forest%'
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp1
    OVERWRITE=true
  AGGREGATE
  OUTPUT: 
  GROUP BY: <slot 2>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: 
  GROUP BY: p_partkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.part (0)
      PREDICATES: p_name LIKE 'forest%'
      TUPLE IDS: 0 
====
# QUERY_NAME : TPCH-Q20_QUERY_2
insert overwrite table tpch.q20_tmp2
select
  l_partkey,
  l_suppkey,
  0.5 * sum(l_quantity)
from tpch.lineitem
where
  l_shipdate >= '1994-01-01' and
  l_shipdate < '1995-01-01'
group by
  l_partkey,
  l_suppkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp2
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(l_quantity)
  GROUP BY: l_partkey, l_suppkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate >= '1994-01-01', l_shipdate < '1995-01-01'
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp2
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 6>)
  GROUP BY: <slot 4>, <slot 5>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(l_quantity)
  GROUP BY: l_partkey, l_suppkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.lineitem (0)
      PREDICATES: l_shipdate >= '1994-01-01', l_shipdate < '1995-01-01'
      TUPLE IDS: 0 
====
# QUERY_NAME : TPCH-Q20_QUERY_3
insert overwrite table tpch.q20_tmp3
select
  ps_suppkey,
  ps_availqty,
  sum_quantity
from tpch.partsupp ps
  join tpch.q20_tmp2 t2
    on (ps.ps_partkey = t2.l_partkey and ps.ps_suppkey = t2.l_suppkey)
  join tpch.q20_tmp1 t1
    on (ps.ps_partkey = t1.p_partkey)
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp3
    OVERWRITE=true
  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      ps.ps_partkey = t1.p_partkey
    TUPLE IDS: 0 1 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          ps.ps_partkey = t2.l_partkey
          ps.ps_suppkey = t2.l_suppkey
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.partsupp (0)
            TUPLE IDS: 0 
          SCAN HDFS table=tpch.q20_tmp2 (1) compact
            TUPLE IDS: 1 
      SCAN HDFS table=tpch.q20_tmp1 (3) compact
        TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  RANDOM
  WRITE TO HDFS table=tpch.q20_tmp3
    OVERWRITE=true
  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      ps.ps_partkey = t1.p_partkey
    TUPLE IDS: 0 1 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          ps.ps_partkey = t2.l_partkey
          ps.ps_suppkey = t2.l_suppkey
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.partsupp (0)
            TUPLE IDS: 0 
          EXCHANGE (5)
            TUPLE IDS: 1 
      EXCHANGE (6)
        TUPLE IDS: 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.q20_tmp1 (3) compact
    TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  SCAN HDFS table=tpch.q20_tmp2 (1) compact
    TUPLE IDS: 1 
====
# QUERY_NAME : TPCH-Q20_QUERY_4
# Modified to use subquery to work around IMP-127
insert overwrite table tpch.q20_tmp4
select ps_suppkey
from tpch.q20_tmp3
where ps_availqty > sum_quantity
group by ps_suppkey
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp4
    OVERWRITE=true
  AGGREGATE
  OUTPUT: 
  GROUP BY: ps_suppkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.q20_tmp3 (0)
      PREDICATES: ps_availqty > sum_quantity
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q20_tmp4
    OVERWRITE=true
  AGGREGATE
  OUTPUT: 
  GROUP BY: <slot 3>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: 
  GROUP BY: ps_suppkey
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.q20_tmp3 (0)
      PREDICATES: ps_availqty > sum_quantity
      TUPLE IDS: 0 
====
# QUERY_NAME : TPCH-Q20_QUERY_5
# Modifications: Added limit
select
  s_name,
  s_address
from tpch.supplier s
  join tpch.nation n
    on (s.s_nationkey = n.n_nationkey and
        n.n_name = 'CANADA')
join tpch.q20_tmp4 t4
  on (s.s_suppkey = t4.ps_suppkey)
order by
  s_name
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: s_name ASC
  LIMIT: 100
  TUPLE IDS: 0 1 2 
    HASH JOIN
      JOIN OP: INNER JOIN
      HASH PREDICATES:
        s.s_suppkey = t4.ps_suppkey
      TUPLE IDS: 0 1 2 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            s.s_nationkey = n.n_nationkey
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.supplier (0)
              TUPLE IDS: 0 
            SCAN HDFS table=tpch.nation (1) compact
              PREDICATES: n.n_name = 'CANADA'
              TUPLE IDS: 1 
        SCAN HDFS table=tpch.q20_tmp4 (3) compact
          TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: s_name ASC
  LIMIT: 100
  TUPLE IDS: 0 1 2 
    EXCHANGE (8)
      TUPLE IDS: 0 1 2 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 8
    UNPARTITIONED

  HASH JOIN
    JOIN OP: INNER JOIN
    HASH PREDICATES:
      s.s_suppkey = t4.ps_suppkey
    TUPLE IDS: 0 1 2 
      HASH JOIN
        JOIN OP: INNER JOIN
        HASH PREDICATES:
          s.s_nationkey = n.n_nationkey
        TUPLE IDS: 0 1 
          SCAN HDFS table=tpch.supplier (0)
            TUPLE IDS: 0 
          EXCHANGE (6)
            TUPLE IDS: 1 
      EXCHANGE (7)
        TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  SCAN HDFS table=tpch.q20_tmp4 (3) compact
    TUPLE IDS: 2 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 6
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (1) compact
    PREDICATES: n.n_name = 'CANADA'
    TUPLE IDS: 1 
====
# QUERY_NAME : TPCH-Q21
# Q21 - Suppliers Who Kept Orders Waiting Query
# Modifications: Converted 'EXISTS' into LEFT SEMI JOIN, converted
# NOT EXISTS into LEFT OUTER JOIN, changed selects from multiple tables to
# joins, added limit
select
  s_name,
  count(*) as numwait
from tpch.lineitem l1
  join tpch.supplier s
    on (s.s_suppkey = l1.l_suppkey)
  join tpch.orders o
    on (o.o_orderkey = l1.l_orderkey)
  join tpch.nation n
    on (s.s_nationkey = n.n_nationkey)
  left semi join tpch.lineitem l2
    on (l2.l_orderkey = l1.l_orderkey and
        l2.l_suppkey <> l1.l_suppkey)
  left outer join tpch.lineitem l3
    on (l3.l_orderkey = l1.l_orderkey and
        l3.l_suppkey <> l1.l_suppkey and
        l3.l_receiptdate > l3.l_commitdate)
where
  l3.l_orderkey is null and
  n_name = 'SAUDI ARABIA' and
  o_orderstatus = 'F'
group by
  s_name
order by
  numwait desc,
  s_name
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 16> DESC, <slot 15> ASC
  LIMIT: 100
  TUPLE IDS: 6 
    AGGREGATE
    OUTPUT: COUNT(*)
    GROUP BY: s_name
    TUPLE IDS: 6 
      HASH JOIN
        JOIN OP: LEFT OUTER JOIN
        HASH PREDICATES:
          l1.l_orderkey = l3.l_orderkey
        OTHER JOIN PREDICATES: l3.l_suppkey != l1.l_suppkey
        OTHER PREDICATES: l3.l_orderkey IS NULL
        TUPLE IDS: 0 1 2 3 4 5N 
          HASH JOIN
            JOIN OP: LEFT SEMI JOIN
            HASH PREDICATES:
              l1.l_orderkey = l2.l_orderkey
            OTHER PREDICATES: l2.l_suppkey != l1.l_suppkey
            TUPLE IDS: 0 1 2 3 4 
              HASH JOIN
                JOIN OP: INNER JOIN
                HASH PREDICATES:
                  s.s_nationkey = n.n_nationkey
                TUPLE IDS: 0 1 2 3 
                  HASH JOIN
                    JOIN OP: INNER JOIN
                    HASH PREDICATES:
                      l1.l_orderkey = o.o_orderkey
                    TUPLE IDS: 0 1 2 
                      HASH JOIN
                        JOIN OP: INNER JOIN
                        HASH PREDICATES:
                          l1.l_suppkey = s.s_suppkey
                        TUPLE IDS: 0 1 
                          SCAN HDFS table=tpch.lineitem (0)
                            TUPLE IDS: 0 
                          SCAN HDFS table=tpch.supplier (1) compact
                            TUPLE IDS: 1 
                      SCAN HDFS table=tpch.orders (3) compact
                        PREDICATES: o_orderstatus = 'F'
                        TUPLE IDS: 2 
                  SCAN HDFS table=tpch.nation (5) compact
                    PREDICATES: n_name = 'SAUDI ARABIA'
                    TUPLE IDS: 3 
              SCAN HDFS table=tpch.lineitem (7) compact
                TUPLE IDS: 4 
          SCAN HDFS table=tpch.lineitem (9) compact
            PREDICATES: l3.l_receiptdate > l3.l_commitdate
            TUPLE IDS: 5 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 16> DESC, <slot 15> ASC
  LIMIT: 100
  TUPLE IDS: 6 
    AGGREGATE
    OUTPUT: SUM(<slot 16>)
    GROUP BY: <slot 15>
    TUPLE IDS: 6 
      EXCHANGE (18)
        TUPLE IDS: 6 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 18
    UNPARTITIONED

  AGGREGATE
  OUTPUT: COUNT(*)
  GROUP BY: s_name
  TUPLE IDS: 6 
    HASH JOIN
      JOIN OP: LEFT OUTER JOIN
      HASH PREDICATES:
        l1.l_orderkey = l3.l_orderkey
      OTHER JOIN PREDICATES: l3.l_suppkey != l1.l_suppkey
      OTHER PREDICATES: l3.l_orderkey IS NULL
      TUPLE IDS: 0 1 2 3 4 5N 
        HASH JOIN
          JOIN OP: LEFT SEMI JOIN
          HASH PREDICATES:
            l1.l_orderkey = l2.l_orderkey
          OTHER PREDICATES: l2.l_suppkey != l1.l_suppkey
          TUPLE IDS: 0 1 2 3 4 
            HASH JOIN
              JOIN OP: INNER JOIN
              HASH PREDICATES:
                s.s_nationkey = n.n_nationkey
              TUPLE IDS: 0 1 2 3 
                HASH JOIN
                  JOIN OP: INNER JOIN
                  HASH PREDICATES:
                    l1.l_orderkey = o.o_orderkey
                  TUPLE IDS: 0 1 2 
                    HASH JOIN
                      JOIN OP: INNER JOIN
                      HASH PREDICATES:
                        l1.l_suppkey = s.s_suppkey
                      TUPLE IDS: 0 1 
                        SCAN HDFS table=tpch.lineitem (0)
                          TUPLE IDS: 0 
                        EXCHANGE (13)
                          TUPLE IDS: 1 
                    EXCHANGE (14)
                      TUPLE IDS: 2 
                EXCHANGE (15)
                  TUPLE IDS: 3 
            EXCHANGE (16)
              TUPLE IDS: 4 
        EXCHANGE (17)
          TUPLE IDS: 5 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 17
    UNPARTITIONED

  SCAN HDFS table=tpch.lineitem (9) compact
    PREDICATES: l3.l_receiptdate > l3.l_commitdate
    TUPLE IDS: 5 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 16
    UNPARTITIONED

  SCAN HDFS table=tpch.lineitem (7) compact
    TUPLE IDS: 4 

Plan Fragment 4
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 15
    UNPARTITIONED

  SCAN HDFS table=tpch.nation (5) compact
    PREDICATES: n_name = 'SAUDI ARABIA'
    TUPLE IDS: 3 

Plan Fragment 5
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 14
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (3) compact
    PREDICATES: o_orderstatus = 'F'
    TUPLE IDS: 2 

Plan Fragment 6
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 13
    UNPARTITIONED

  SCAN HDFS table=tpch.supplier (1) compact
    TUPLE IDS: 1 
====
# QUERY_NAME : TPCH-Q22_QUERY_1
# Q22 - Global Sales Opportunity Query
# Modifications: Added a cust_name_char column that will always have
# a constant value ('C') so that we can do a join between this table
# in the main query. This was needed because we only support equi-joins
# and had to have a column to join on.
insert overwrite table tpch.q22_customer_tmp1
select
  avg(c_acctbal) avg_acctbal,
  substr(c_name, 1, 1) as cust_name_char
from tpch.customer c
where
   c.c_acctbal > 0.00 and
   (substr(c.c_phone, 1, 2) = '13' or
    substr(c.c_phone, 1, 2) = '31' or
    substr(c.c_phone, 1, 2) = '23' or
    substr(c.c_phone, 1, 2) = '29' or
    substr(c.c_phone, 1, 2) = '30' or
    substr(c.c_phone, 1, 2) = '18' or
    substr(c.c_phone, 1, 2) = '17')
group by
  substr(c_name, 1, 1)
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q22_customer_tmp1
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(c_acctbal), COUNT(c_acctbal)
  GROUP BY: substr(c_name, 1, 1)
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.customer (0)
      PREDICATES: c.c_acctbal > 0.0, substr(c.c_phone, 1, 2) = '13' OR substr(c.c_phone, 1, 2) = '31' OR substr(c.c_phone, 1, 2) = '23' OR substr(c.c_phone, 1, 2) = '29' OR substr(c.c_phone, 1, 2) = '30' OR substr(c.c_phone, 1, 2) = '18' OR substr(c.c_phone, 1, 2) = '17'
      TUPLE IDS: 0 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  WRITE TO HDFS table=tpch.q22_customer_tmp1
    OVERWRITE=true
  AGGREGATE
  OUTPUT: SUM(<slot 4>), SUM(<slot 5>)
  GROUP BY: <slot 3>
  TUPLE IDS: 1 
    EXCHANGE (2)
      TUPLE IDS: 1 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  AGGREGATE
  OUTPUT: SUM(c_acctbal), COUNT(c_acctbal)
  GROUP BY: substr(c_name, 1, 1)
  TUPLE IDS: 1 
    SCAN HDFS table=tpch.customer (0)
      PREDICATES: c.c_acctbal > 0.0, substr(c.c_phone, 1, 2) = '13' OR substr(c.c_phone, 1, 2) = '31' OR substr(c.c_phone, 1, 2) = '23' OR substr(c.c_phone, 1, 2) = '29' OR substr(c.c_phone, 1, 2) = '30' OR substr(c.c_phone, 1, 2) = '18' OR substr(c.c_phone, 1, 2) = '17'
      TUPLE IDS: 0 
====
# QUERY_NAME : TPCH-Q22_QUERY_2
# Modifications: Updated to use LEFT OUTER JOIN instead of NOT EXISTS,
# removed subquery by pushing aggregation up a level, added temp table
# to remove another subquery that computed the average account balance,
# added limit, added round()
select
  substring(c_phone, 1, 2) as cntrycode,
  count(*) as numcust,
  round(sum(c_acctbal), 4) as totacctbal
from tpch.customer c
  join tpch.q22_customer_tmp1 ct
    on (substr(c.c_name, 1, 1) = ct.cust_name_char)
  left outer join tpch.orders o
    on (o.o_custkey = c.c_custkey)
where
  o_custkey is null and
  c.c_acctbal > ct.avg_acctbal and
  (substr(c.c_phone, 1, 2) = '13' or
   substr(c.c_phone, 1, 2) = '31' or
   substr(c.c_phone, 1, 2) = '23' or
   substr(c.c_phone, 1, 2) = '29' or
   substr(c.c_phone, 1, 2) = '30' or
   substr(c.c_phone, 1, 2) = '18' or
   substr(c.c_phone, 1, 2) = '17')
group by
  substring(c_phone, 1, 2)
order by
  cntrycode
limit 100
---- PLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 7> ASC
  LIMIT: 100
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: COUNT(*), SUM(c_acctbal)
    GROUP BY: substring(c_phone, 1, 2)
    TUPLE IDS: 3 
      HASH JOIN
        JOIN OP: LEFT OUTER JOIN
        HASH PREDICATES:
          c.c_custkey = o.o_custkey
        OTHER PREDICATES: o_custkey IS NULL
        TUPLE IDS: 0 1 2N 
          HASH JOIN
            JOIN OP: INNER JOIN
            HASH PREDICATES:
              substr(c.c_name, 1, 1) = ct.cust_name_char
            OTHER PREDICATES: c.c_acctbal > ct.avg_acctbal
            TUPLE IDS: 0 1 
              SCAN HDFS table=tpch.customer (0)
                PREDICATES: substr(c.c_phone, 1, 2) = '13' OR substr(c.c_phone, 1, 2) = '31' OR substr(c.c_phone, 1, 2) = '23' OR substr(c.c_phone, 1, 2) = '29' OR substr(c.c_phone, 1, 2) = '30' OR substr(c.c_phone, 1, 2) = '18' OR substr(c.c_phone, 1, 2) = '17'
                TUPLE IDS: 0 
              SCAN HDFS table=tpch.q22_customer_tmp1 (1) compact
                TUPLE IDS: 1 
          SCAN HDFS table=tpch.orders (3) compact
            TUPLE IDS: 2 
---- DISTRIBUTEDPLAN
Plan Fragment 0
  UNPARTITIONED
  TOP-N
  ORDER BY: <slot 7> ASC
  LIMIT: 100
  TUPLE IDS: 3 
    AGGREGATE
    OUTPUT: SUM(<slot 8>), SUM(<slot 9>)
    GROUP BY: <slot 7>
    TUPLE IDS: 3 
      EXCHANGE (9)
        TUPLE IDS: 3 

Plan Fragment 1
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 9
    UNPARTITIONED

  AGGREGATE
  OUTPUT: COUNT(*), SUM(c_acctbal)
  GROUP BY: substring(c_phone, 1, 2)
  TUPLE IDS: 3 
    HASH JOIN
      JOIN OP: LEFT OUTER JOIN
      HASH PREDICATES:
        c.c_custkey = o.o_custkey
      OTHER PREDICATES: o_custkey IS NULL
      TUPLE IDS: 0 1 2N 
        HASH JOIN
          JOIN OP: INNER JOIN
          HASH PREDICATES:
            substr(c.c_name, 1, 1) = ct.cust_name_char
          OTHER PREDICATES: c.c_acctbal > ct.avg_acctbal
          TUPLE IDS: 0 1 
            SCAN HDFS table=tpch.customer (0)
              PREDICATES: substr(c.c_phone, 1, 2) = '13' OR substr(c.c_phone, 1, 2) = '31' OR substr(c.c_phone, 1, 2) = '23' OR substr(c.c_phone, 1, 2) = '29' OR substr(c.c_phone, 1, 2) = '30' OR substr(c.c_phone, 1, 2) = '18' OR substr(c.c_phone, 1, 2) = '17'
              TUPLE IDS: 0 
            EXCHANGE (7)
              TUPLE IDS: 1 
        EXCHANGE (8)
          TUPLE IDS: 2 

Plan Fragment 2
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 8
    UNPARTITIONED

  SCAN HDFS table=tpch.orders (3) compact
    TUPLE IDS: 2 

Plan Fragment 3
  RANDOM
  STREAM DATA SINK
    EXCHANGE ID: 7
    UNPARTITIONED

  SCAN HDFS table=tpch.q22_customer_tmp1 (1) compact
    TUPLE IDS: 1 
====
