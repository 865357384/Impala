select name, zip
from functional.testtbl
order by name
limit 1
---- PLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  1:TOP-N
  |  order by: name ASC
  |  limit: 1
  |  tuple ids: 0 
  |  
  0:SCAN HDFS
     table=functional.testtbl #partitions=0 size=0B
     tuple ids: 0 
---- DISTRIBUTEDPLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  3:TOP-N
  |  order by: name ASC
  |  limit: 1
  |  tuple ids: 0 
  |  
  2:EXCHANGE
     tuple ids: 0 

PLAN FRAGMENT 1
  PARTITION: RANDOM

  STREAM DATA SINK
    EXCHANGE ID: 2
    UNPARTITIONED

  1:TOP-N
  |  order by: name ASC
  |  limit: 1
  |  tuple ids: 0 
  |  
  0:SCAN HDFS
     table=functional.testtbl #partitions=0 size=0B
     tuple ids: 0 
---- SCANRANGELOCATIONS
NODE 0:
====
select zip, count(*)
from functional.testtbl
where name like 'm%'
group by 1
order by 2 desc
limit 10
---- PLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  2:TOP-N
  |  order by: <slot 3> DESC
  |  limit: 10
  |  tuple ids: 1 
  |  
  1:AGGREGATE
  |  output: COUNT(*)
  |  group by: zip
  |  tuple ids: 1 
  |  
  0:SCAN HDFS
     table=functional.testtbl #partitions=0 size=0B
     predicates: name LIKE 'm%'
     tuple ids: 0 
---- DISTRIBUTEDPLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  6:TOP-N
  |  order by: <slot 3> DESC
  |  limit: 10
  |  tuple ids: 1 
  |  
  5:EXCHANGE
     tuple ids: 1 

PLAN FRAGMENT 1
  PARTITION: HASH_PARTITIONED: <slot 2>

  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  2:TOP-N
  |  order by: <slot 3> DESC
  |  limit: 10
  |  tuple ids: 1 
  |  
  4:AGGREGATE
  |  output: SUM(<slot 3>)
  |  group by: <slot 2>
  |  tuple ids: 1 
  |  
  3:EXCHANGE
     tuple ids: 1 

PLAN FRAGMENT 2
  PARTITION: RANDOM

  STREAM DATA SINK
    EXCHANGE ID: 3
    HASH_PARTITIONED: <slot 2>

  1:AGGREGATE
  |  output: COUNT(*)
  |  group by: zip
  |  tuple ids: 1 
  |  
  0:SCAN HDFS
     table=functional.testtbl #partitions=0 size=0B
     predicates: name LIKE 'm%'
     tuple ids: 0 
---- SCANRANGELOCATIONS
NODE 0:
====
select int_col, sum(float_col) 
from functional.hbasealltypessmall
where id < 5
group by 1
order by 2
limit 4
---- PLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  2:TOP-N
  |  order by: <slot 4> ASC
  |  limit: 4
  |  tuple ids: 1 
  |  
  1:AGGREGATE
  |  output: SUM(float_col)
  |  group by: int_col
  |  tuple ids: 1 
  |  
  0:SCAN HBASE
     table:hbasealltypessmall
     predicates: id < 5
     tuple ids: 0 
---- DISTRIBUTEDPLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  6:TOP-N
  |  order by: <slot 4> ASC
  |  limit: 4
  |  tuple ids: 1 
  |  
  5:EXCHANGE
     tuple ids: 1 

PLAN FRAGMENT 1
  PARTITION: HASH_PARTITIONED: <slot 3>

  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  2:TOP-N
  |  order by: <slot 4> ASC
  |  limit: 4
  |  tuple ids: 1 
  |  
  4:AGGREGATE
  |  output: SUM(<slot 4>)
  |  group by: <slot 3>
  |  tuple ids: 1 
  |  
  3:EXCHANGE
     tuple ids: 1 

PLAN FRAGMENT 2
  PARTITION: RANDOM

  STREAM DATA SINK
    EXCHANGE ID: 3
    HASH_PARTITIONED: <slot 3>

  1:AGGREGATE
  |  output: SUM(float_col)
  |  group by: int_col
  |  tuple ids: 1 
  |  
  0:SCAN HBASE
     table:hbasealltypessmall
     predicates: id < 5
     tuple ids: 0 
---- SCANRANGELOCATIONS
NODE 0:
  HBASE KEYRANGE port=60201 <unbounded>:3
  HBASE KEYRANGE port=60202 3:7
  HBASE KEYRANGE port=60203 7:<unbounded>
====
select int_col, sum(float_col), min(float_col) 
from functional.hbasealltypessmall
group by 1
order by 2,3 desc
limit 0
---- PLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  2:TOP-N
  |  order by: <slot 3> ASC, <slot 4> DESC
  |  limit: 0
  |  tuple ids: 1 
  |  
  1:AGGREGATE
  |  output: SUM(float_col), MIN(float_col)
  |  group by: int_col
  |  tuple ids: 1 
  |  
  0:SCAN HBASE
     table:hbasealltypessmall
     tuple ids: 0 
---- DISTRIBUTEDPLAN
PLAN FRAGMENT 0
  PARTITION: UNPARTITIONED

  6:TOP-N
  |  order by: <slot 3> ASC, <slot 4> DESC
  |  limit: 0
  |  tuple ids: 1 
  |  
  5:EXCHANGE
     tuple ids: 1 

PLAN FRAGMENT 1
  PARTITION: HASH_PARTITIONED: <slot 2>

  STREAM DATA SINK
    EXCHANGE ID: 5
    UNPARTITIONED

  2:TOP-N
  |  order by: <slot 3> ASC, <slot 4> DESC
  |  limit: 0
  |  tuple ids: 1 
  |  
  4:AGGREGATE
  |  output: SUM(<slot 3>), MIN(<slot 4>)
  |  group by: <slot 2>
  |  tuple ids: 1 
  |  
  3:EXCHANGE
     tuple ids: 1 

PLAN FRAGMENT 2
  PARTITION: RANDOM

  STREAM DATA SINK
    EXCHANGE ID: 3
    HASH_PARTITIONED: <slot 2>

  1:AGGREGATE
  |  output: SUM(float_col), MIN(float_col)
  |  group by: int_col
  |  tuple ids: 1 
  |  
  0:SCAN HBASE
     table:hbasealltypessmall
     tuple ids: 0 
---- SCANRANGELOCATIONS
NODE 0:
  HBASE KEYRANGE port=60201 <unbounded>:3
  HBASE KEYRANGE port=60202 3:7
  HBASE KEYRANGE port=60203 7:<unbounded>
====
