====
---- QUERY
# TODO add avg, sum, min, max when multiple analytic fns are supported
select year, month,
count(int_col) over (partition by year, month)
from alltypessmall
where id % 4 = 0 and month != 1
---- RESULTS
2009,2,6
2009,2,6
2009,2,6
2009,2,6
2009,2,6
2009,2,6
2009,3,6
2009,3,6
2009,3,6
2009,3,6
2009,3,6
2009,3,6
2009,4,6
2009,4,6
2009,4,6
2009,4,6
2009,4,6
2009,4,6
---- TYPES
INT, INT, BIGINT
====
---- QUERY
select int_col,
count(int_col) over ()
from alltypessmall
where id % 4 = 0 and month = 1
order by int_col
---- RESULTS
0,7
0,7
2,7
4,7
4,7
6,7
8,7
---- TYPES
INT, BIGINT
====
---- QUERY
select tinyint_col,
count(int_col) over (order by tinyint_col)
from alltypessmall
where month = 1 and tinyint_col < 5
---- RESULTS
0,3
0,3
0,3
1,6
1,6
1,6
2,9
2,9
2,9
3,12
3,12
3,12
4,15
4,15
4,15
---- TYPES
TINYINT, BIGINT
====
---- QUERY
# Test ordering expressions having NULL values
select tinyint_col, smallint_col, int_col,
sum(smallint_col) over (order by tinyint_col nulls first)
from alltypesagg
where year = 2010 and month = 1 and day = 4 and id <= 3030 and bool_col = true
order by tinyint_col, id, smallint_col, int_col
---- RESULTS
2,2,2,96
2,12,12,96
2,22,22,96
4,4,4,138
4,14,14,138
4,24,24,138
6,6,6,186
6,16,16,186
6,26,26,186
8,8,8,240
8,18,18,240
8,28,28,240
NULL,NULL,NULL,60
NULL,10,10,60
NULL,20,20,60
NULL,30,30,60
---- TYPES
TINYINT, SMALLINT, INT, BIGINT
====
---- QUERY
# Test partitions having NULL values
select tinyint_col, smallint_col,
sum(int_col) over (partition by tinyint_col order by smallint_col)
from alltypesagg
where year = 2010 and month = 1 and day = 4 and id <= 3200
    and (smallint_col < 50 or smallint_col is NULL)
    and (tinyint_col = 1 or tinyint_col is NULL)
order by tinyint_col, smallint_col
---- RESULTS
1,1,102
1,1,102
1,11,224
1,11,224
1,21,366
1,21,366
1,31,528
1,31,528
1,41,710
1,41,710
NULL,10,120
NULL,10,120
NULL,20,260
NULL,20,260
NULL,30,420
NULL,30,420
NULL,40,600
NULL,40,600
NULL,NULL,900
NULL,NULL,900
NULL,NULL,900
---- TYPES
TINYINT, SMALLINT, BIGINT
====
---- QUERY
# Test multiple partition exprs
select year, month, tinyint_col,
count(int_col) over (partition by year, month order by tinyint_col)
from alltypessmall
where month >= 3 and tinyint_col < 3
---- RESULTS
2009,3,0,3
2009,3,0,3
2009,3,0,3
2009,3,1,6
2009,3,1,6
2009,3,1,6
2009,3,2,9
2009,3,2,9
2009,3,2,9
2009,4,0,3
2009,4,0,3
2009,4,0,3
2009,4,1,6
2009,4,1,6
2009,4,1,6
2009,4,2,9
2009,4,2,9
2009,4,2,9
---- TYPES
INT, INT, TINYINT, BIGINT
====
---- QUERY
# Test multiple partition exprs and multiple order by exprs
select year, month, bool_col, tinyint_col,
count(id) over (partition by year, month order by bool_col, tinyint_col)
from alltypes
where tinyint_col < 2 and month < 3 and (id % 100 < 10)
order by year, month, bool_col, tinyint_col
---- RESULTS
2009,1,false,1,4
2009,1,false,1,4
2009,1,false,1,4
2009,1,false,1,4
2009,1,true,0,8
2009,1,true,0,8
2009,1,true,0,8
2009,1,true,0,8
2009,2,false,1,2
2009,2,false,1,2
2009,2,true,0,4
2009,2,true,0,4
2010,1,false,1,3
2010,1,false,1,3
2010,1,false,1,3
2010,1,true,0,6
2010,1,true,0,6
2010,1,true,0,6
2010,2,false,1,3
2010,2,false,1,3
2010,2,false,1,3
2010,2,true,0,6
2010,2,true,0,6
2010,2,true,0,6
---- TYPES
INT, INT, BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# Simple ROWS window
select (month % 2), int_col,
sum(int_col) over (partition by (month % 2)
                   order by int_col rows between unbounded preceding and current row)
from alltypestiny
---- RESULTS
0,0,0
0,0,0
0,1,1
0,1,2
1,0,0
1,0,0
1,1,1
1,1,2
---- TYPES
INT, INT, BIGINT
====
---- QUERY
# sum() over ROWS with end bound FOLLOWING
select bool_col, tinyint_col,
sum(tinyint_col) over (partition by bool_col order by tinyint_col
                       rows between unbounded preceding and 1 following)
from alltypesagg where id <= 10 and day = 1
---- RESULTS
false,1,4
false,3,9
false,5,16
false,7,25
false,9,25
true,2,6
true,4,12
true,6,20
true,8,20
true,NULL,20
true,NULL,20
---- TYPES
BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# count() over ROWS with end bound FOLLOWING
select bool_col, tinyint_col,
count(tinyint_col) over (partition by bool_col order by tinyint_col
                         rows between unbounded preceding and 1 following)
from alltypesagg where id <= 10 and day = 1
---- RESULTS
false,1,2
false,3,3
false,5,4
false,7,5
false,9,5
true,2,2
true,4,3
true,6,4
true,8,4
true,NULL,4
true,NULL,4
---- TYPES
BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# ROWS with end bound PRECEDING
select bool_col, tinyint_col,
sum(tinyint_col) over (partition by bool_col order by tinyint_col
                       rows between unbounded preceding and 3 preceding)
from alltypesagg where id <= 10 and day = 1
---- RESULTS
false,1,NULL
false,3,NULL
false,5,NULL
false,7,1
false,9,4
true,2,NULL
true,4,NULL
true,6,NULL
true,8,2
true,NULL,6
true,NULL,12
---- TYPES
BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# ROWS with end bound FOLLOWING beyond the end of the results
select bool_col, tinyint_col,
sum(tinyint_col) over (partition by bool_col order by tinyint_col
                       rows between unbounded preceding and 20 following)
from alltypesagg where id <= 10 and day = 1
---- RESULTS
false,1,25
false,3,25
false,5,25
false,7,25
false,9,25
true,2,20
true,4,20
true,6,20
true,8,20
true,NULL,20
true,NULL,20
---- TYPES
BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# ROWS with end bound PRECEDING before the start of all results
select bool_col, tinyint_col,
sum(tinyint_col) over (partition by bool_col order by tinyint_col
                       rows between unbounded preceding and 20 preceding)
from alltypesagg where id <= 10 and day = 1
---- RESULTS
false,1,NULL
false,3,NULL
false,5,NULL
false,7,NULL
false,9,NULL
true,2,NULL
true,4,NULL
true,6,NULL
true,8,NULL
true,NULL,NULL
true,NULL,NULL
---- TYPES
BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# multiple analytics in the same select block
select tinyint_col, int_col, bigint_col,
count(bigint_col)
  over(partition by tinyint_col, bigint_col order by int_col desc
  rows between unbounded preceding and 1 following),
max(tinyint_col)
  over(partition by bigint_col, tinyint_col order by int_col desc
  rows between unbounded preceding and 1 following),
# different window
min(int_col)
  over(partition by bigint_col, tinyint_col order by int_col desc
  rows between unbounded preceding and 2 following),
# different sort order but same partition
max(int_col)
  over(partition by bigint_col, tinyint_col order by int_col asc
  rows between unbounded preceding and 2 following),
# different partition
sum(int_col)
  over(partition by tinyint_col order by int_col desc
  rows between unbounded preceding and 2 following)
from functional.alltypesagg
where id < 20
---- RESULTS: VERIFY_IS_EQUAL_SORTED
1,1,10,1,1,1,1,12
1,11,110,1,1,11,11,12
2,2,20,1,2,2,2,14
2,12,120,1,2,12,12,14
3,3,30,1,3,3,3,16
3,13,130,1,3,13,13,16
4,4,40,1,4,4,4,18
4,14,140,1,4,14,14,18
5,5,50,1,5,5,5,20
5,15,150,1,5,15,15,20
6,6,60,1,6,6,6,22
6,16,160,1,6,16,16,22
7,7,70,1,7,7,7,24
7,17,170,1,7,17,17,24
8,8,80,1,8,8,8,26
8,18,180,1,8,18,18,26
9,9,90,1,9,9,9,28
9,19,190,1,9,19,19,28
NULL,10,100,2,NULL,10,10,20
NULL,10,100,2,NULL,10,10,20
NULL,NULL,NULL,0,NULL,NULL,NULL,10
NULL,NULL,NULL,0,NULL,NULL,NULL,20
---- TYPES
TINYINT, INT, BIGINT, BIGINT, TINYINT, INT, INT, BIGINT
====
---- QUERY
# analytics on a grouped aggregation with a final order by
select bool_col,
sum(min(int_col))
  over(partition by min(tinyint_col) order by max(int_col)
  rows between unbounded preceding and 1 following),
max(sum(bigint_col))
  over(partition by min(tinyint_col) order by max(int_col)
  rows between unbounded preceding and 1 following),
min(sum(bigint_col))
  over(partition by min(tinyint_col) order by sum(int_col)
  rows between unbounded preceding and 4 following)
from functional.alltypes
group by 1
order by 1, 2, 3
---- RESULTS: VERIFY_IS_EQUAL_SORTED
false,1,182500,182500
true,0,146000,146000
---- TYPES
BOOLEAN, BIGINT, BIGINT, BIGINT
====
#TODO: Enable after analytic functions are supported in inline views
#---- QUERY
## Test for IMPALA-1200
#SELECT DISTINCT c1 FROM
#  (SELECT MAX(smallint_col) OVER (PARTITION BY year ORDER BY id DESC) AS c1
#   FROM alltypesagg);
#---- RESULTS
#99
#---- TYPES
#SMALLINT
#====
---- QUERY
# Tests rank()
select year, month, bool_col, tinyint_col,
rank() over (partition by year, month order by bool_col, tinyint_col)
from alltypes
where tinyint_col < 2 and month < 3 and (id % 100 < 10)
order by year, month, bool_col, tinyint_col
---- RESULTS
2009,1,false,1,1
2009,1,false,1,1
2009,1,false,1,1
2009,1,false,1,1
2009,1,true,0,5
2009,1,true,0,5
2009,1,true,0,5
2009,1,true,0,5
2009,2,false,1,1
2009,2,false,1,1
2009,2,true,0,3
2009,2,true,0,3
2010,1,false,1,1
2010,1,false,1,1
2010,1,false,1,1
2010,1,true,0,4
2010,1,true,0,4
2010,1,true,0,4
2010,2,false,1,1
2010,2,false,1,1
2010,2,false,1,1
2010,2,true,0,4
2010,2,true,0,4
2010,2,true,0,4
---- TYPES
INT, INT, BOOLEAN, TINYINT, BIGINT
====
---- QUERY
# Tests dense_rank()
select month, bool_col, tinyint_col,
dense_rank() over (partition by month order by bool_col, tinyint_col)
from alltypes
where year = 2009 and tinyint_col < 5 and month < 3 and (id % 100 < 4)
order by month, bool_col, tinyint_col
---- RESULTS
1,false,1,1
1,false,1,1
1,false,1,1
1,false,1,1
1,false,3,2
1,false,3,2
1,false,3,2
1,false,3,2
1,true,0,3
1,true,0,3
1,true,0,3
1,true,0,3
1,true,2,4
1,true,2,4
1,true,2,4
1,true,2,4
2,false,1,1
2,false,1,1
2,false,3,2
2,false,3,2
2,true,0,3
2,true,0,3
2,true,2,4
2,true,2,4
---- TYPES
INT, BOOLEAN, TINYINT, BIGINT
====
