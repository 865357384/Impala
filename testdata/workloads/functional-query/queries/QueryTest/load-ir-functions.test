====
---- QUERY
drop function if exists udf_test.identity(boolean);
drop function if exists udf_test.identity(tinyint);
drop function if exists udf_test.identity(smallint);
drop function if exists udf_test.identity(int);
drop function if exists udf_test.identity(bigint);
drop function if exists udf_test.identity(float);
drop function if exists udf_test.identity(double);
drop function if exists udf_test.identity(string);
drop function if exists udf_test.identity(timestamp);
drop function if exists udf_test.all_types_fn(
    string, boolean, tinyint, smallint, int, bigint, float, double);
drop function if exists udf_test.no_args();
drop function if exists udf_test.var_sum(int...);
drop function if exists udf_test.var_sum_multiply(double, int...);
drop function if exists udf_test.constant_timestamp();

create database if not exists udf_test;

create function udf_test.identity(boolean) returns boolean
location '/test-warehouse/test-udfs.ll'
symbol='Identity';

create function udf_test.identity(tinyint) returns tinyint
location '/test-warehouse/test-udfs.ll'
symbol='Identity';

create function udf_test.identity(smallint) returns smallint
location '/test-warehouse/test-udfs.ll'
symbol='_Z8IdentityPN10impala_udf15FunctionContextERKNS_11SmallIntValE';

create function udf_test.identity(int) returns int
location '/test-warehouse/test-udfs.ll'
symbol='Identity';

create function udf_test.identity(bigint) returns bigint
location '/test-warehouse/test-udfs.ll'
symbol='Identity';

create function udf_test.identity(float) returns float
location '/test-warehouse/test-udfs.ll'
symbol='Identity';

create function udf_test.identity(double) returns double
location '/test-warehouse/test-udfs.ll'
symbol='_Z8IdentityPN10impala_udf15FunctionContextERKNS_9DoubleValE';

create function udf_test.identity(string) returns string
location '/test-warehouse/test-udfs.ll'
symbol='Identity';

create function udf_test.identity(timestamp) returns timestamp
location '/test-warehouse/test-udfs.ll'
symbol='_Z8IdentityPN10impala_udf15FunctionContextERKNS_12TimestampValE';

create function udf_test.all_types_fn(
    string, boolean, tinyint, smallint, int, bigint, float, double)
returns int
location '/test-warehouse/test-udfs.ll'
symbol='AllTypes';

create function udf_test.no_args() returns string
location '/test-warehouse/test-udfs.ll'
symbol='NoArgs';

create function udf_test.var_sum(int...) returns int
location '/test-warehouse/test-udfs.ll'
symbol='_Z6VarSumPN10impala_udf15FunctionContextEiPKNS_6IntValE';

create function udf_test.var_sum_multiply(double, int...) returns double
location '/test-warehouse/test-udfs.ll'
symbol='VarSumMultiply';

create function udf_test.constant_timestamp() returns timestamp
location '/test-warehouse/test-udfs.ll'
symbol='_Z17ConstantTimestampPN10impala_udf15FunctionContextE';
====
